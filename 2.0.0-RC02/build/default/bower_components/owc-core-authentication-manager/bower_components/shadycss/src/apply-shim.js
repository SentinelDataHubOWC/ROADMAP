'use strict';import{forEachRule,processVariableAndFallback,rulesForStyle,toCssText,gatherStyleText}from'./style-util.js';import{MIXIN_MATCH,VAR_ASSIGN}from'./common-regex.js';import{detectMixin}from'./common-utils.js';import{StyleNode}from'./css-parse.js';const APPLY_NAME_CLEAN=/;\s*/m,INITIAL_INHERIT=/^\s*(initial)|(inherit)\s*$/,IMPORTANT=/\s*!important/,MIXIN_VAR_SEP='_-_';let PropertyEntry,DependantsEntry,MixinMapEntry;class MixinMap{constructor(){this._map={}}set(a,b){a=a.trim(),this._map[a]={properties:b,dependants:{}}}get(a){return a=a.trim(),this._map[a]||null}}let invalidCallback=null;class ApplyShim{constructor(){this._currentElement=null,this._measureElement=null,this._map=new MixinMap}detectMixin(a){return detectMixin(a)}gatherStyles(a){const b=gatherStyleText(a.content);if(b){const c=document.createElement('style');return c.textContent=b,a.content.insertBefore(c,a.content.firstChild),c}return null}transformTemplate(a,b){a._gatheredStyle===void 0&&(a._gatheredStyle=this.gatherStyles(a));const c=a._gatheredStyle;return c?this.transformStyle(c,b):null}transformStyle(a,b=''){let c=rulesForStyle(a);return this.transformRules(c,b),a.textContent=toCssText(c),c}transformCustomStyle(a){let b=rulesForStyle(a);return forEachRule(b,c=>{':root'===c.selector&&(c.selector='html'),this.transformRule(c)}),a.textContent=toCssText(b),b}transformRules(a,b){this._currentElement=b,forEachRule(a,c=>{this.transformRule(c)}),this._currentElement=null}transformRule(a){a.cssText=this.transformCssText(a.parsedCssText),':root'===a.selector&&(a.selector=':host > *')}transformCssText(a){return a=a.replace(VAR_ASSIGN,(b,c,d,e)=>this._produceCssProperties(b,c,d,e)),this._consumeCssProperties(a)}_getInitialValueForProperty(a){return this._measureElement||(this._measureElement=document.createElement('meta'),this._measureElement.setAttribute('apply-shim-measure',''),this._measureElement.style.all='initial',document.head.appendChild(this._measureElement)),window.getComputedStyle(this._measureElement).getPropertyValue(a)}_consumeCssProperties(a){for(let b=null;b=MIXIN_MATCH.exec(a);){let c=b[0],d=b[1],e=b.index,g=e+c.indexOf('@apply'),h=e+c.length,j=a.slice(0,g),k=a.slice(h),l=this._cssTextToMap(j),n=this._atApplyToCssProperties(d,l);a=`${j}${n}${k}`,MIXIN_MATCH.lastIndex=e+n.length}return a}_atApplyToCssProperties(a,b){a=a.replace(APPLY_NAME_CLEAN,'');let c=[],d=this._map.get(a);if(d||(this._map.set(a,{}),d=this._map.get(a)),d){this._currentElement&&(d.dependants[this._currentElement]=!0);let e,g,h;const j=d.properties;for(e in j)h=b&&b[e],g=[e,': var(',a,MIXIN_VAR_SEP,e],h&&g.push(',',h.replace(IMPORTANT,'')),g.push(')'),IMPORTANT.test(j[e])&&g.push(' !important'),c.push(g.join(''))}return c.join('; ')}_replaceInitialOrInherit(a,b){let c=INITIAL_INHERIT.exec(b);return c&&(c[1]?b=this._getInitialValueForProperty(a):b='apply-shim-inherit'),b}_cssTextToMap(a){let b=a.split(';'),c,d,e={};for(let h,j,g=0;g<b.length;g++)h=b[g],h&&(j=h.split(':'),1<j.length&&(c=j[0].trim(),d=this._replaceInitialOrInherit(c,j.slice(1).join(':')),e[c]=d));return e}_invalidateMixinEntry(a){if(invalidCallback)for(let b in a.dependants)b!==this._currentElement&&invalidCallback(b)}_produceCssProperties(a,b,c,d){if(c&&processVariableAndFallback(c,(t,u)=>{u&&this._map.get(u)&&(d=`@apply ${u};`)}),!d)return a;let e=this._consumeCssProperties(''+d),g=a.slice(0,a.indexOf('--')),h=this._cssTextToMap(e),j=h,k=this._map.get(b),l=k&&k.properties;l?j=Object.assign(Object.create(l),h):this._map.set(b,j);let o,q,n=[],s=!1;for(o in j)q=h[o],void 0===q&&(q='initial'),l&&!(o in l)&&(s=!0),n.push(`${b}${MIXIN_VAR_SEP}${o}: ${q}`);return s&&this._invalidateMixinEntry(k),k&&(k.properties=j),c&&(g=`${a};${g}`),`${g}${n.join('; ')};`}}ApplyShim.prototype.detectMixin=ApplyShim.prototype.detectMixin,ApplyShim.prototype.transformStyle=ApplyShim.prototype.transformStyle,ApplyShim.prototype.transformCustomStyle=ApplyShim.prototype.transformCustomStyle,ApplyShim.prototype.transformRules=ApplyShim.prototype.transformRules,ApplyShim.prototype.transformRule=ApplyShim.prototype.transformRule,ApplyShim.prototype.transformTemplate=ApplyShim.prototype.transformTemplate,ApplyShim.prototype._separator=MIXIN_VAR_SEP,Object.defineProperty(ApplyShim.prototype,'invalidCallback',{get(){return invalidCallback},set(a){invalidCallback=a}});export default ApplyShim;