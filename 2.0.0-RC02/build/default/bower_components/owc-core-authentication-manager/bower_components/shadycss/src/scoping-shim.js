'use strict';import{parse,StyleNode}from'./css-parse.js';import{nativeShadow,nativeCssVariables}from'./style-settings.js';import StyleTransformer from'./style-transformer.js';import*as StyleUtil from'./style-util.js';import StyleProperties from'./style-properties.js';import placeholderMap from'./style-placeholder.js';import StyleInfo from'./style-info.js';import StyleCache from'./style-cache.js';import{flush as watcherFlush}from'./document-watcher.js';import templateMap from'./template-map.js';import*as ApplyShimUtils from'./apply-shim-utils.js';import documentWait from'./document-wait.js';import{updateNativeProperties,detectMixin}from'./common-utils.js';import{CustomStyleInterfaceInterface}from'./custom-style-interface.js';const styleCache=new StyleCache;export default class ScopingShim{constructor(){this._scopeCounter={},this._documentOwner=document.documentElement;let a=new StyleNode;a.rules=[],this._documentOwnerStyleInfo=StyleInfo.set(this._documentOwner,new StyleInfo(a)),this._elementsHaveApplied=!1,this._applyShim=null,this._customStyleInterface=null,documentWait(()=>{this._ensure()})}flush(){watcherFlush()}_generateScopeSelector(a){let b=this._scopeCounter[a]=(this._scopeCounter[a]||0)+1;return`${a}-${b}`}getStyleAst(a){return StyleUtil.rulesForStyle(a)}styleAstToString(a){return StyleUtil.toCssText(a)}_gatherStyles(a){return StyleUtil.gatherStyleText(a.content)}_getCssBuild(a){let b=a.content.querySelector('style');return b?b.getAttribute('css-build')||'':''}prepareTemplate(a,b,d){if(!a._prepared){a._prepared=!0,a.name=b,a.extends=d,templateMap[b]=a;let e=this._getCssBuild(a),f=this._gatherStyles(a);nativeShadow||StyleTransformer.dom(a.content,b),this._ensure();let h=detectMixin(f),j=parse(f);h&&nativeCssVariables&&this._applyShim&&this._applyShim.transformRules(j,b),a._styleAst=j,a._cssBuild=e;let k=[];if(nativeCssVariables||(k=StyleProperties.decorateStyles(a._styleAst)),!k.length||nativeCssVariables){let l=nativeShadow?a.content:null,m=placeholderMap[b],n=this._generateStaticStyle({is:b,extends:d,__cssBuild:e},a._styleAst,l,m);a._style=n}a._ownPropertyNames=k}}_generateStaticStyle(a,b,d,e){let f=StyleTransformer.elementStyles(a,b);if(f.length)return StyleUtil.applyCss(f,a.is,d,e)}_prepareHost(a){let g,h,j,{is:b,typeExtension:d}=StyleUtil.getIsExtends(a),e=placeholderMap[b],f=templateMap[b];return f&&(g=f._styleAst,h=f._ownPropertyNames,j=f._cssBuild),StyleInfo.set(a,new StyleInfo(g,e,h,b,d,j))}_ensureApplyShim(){this._applyShim||window.ShadyCSS&&window.ShadyCSS.ApplyShim&&(this._applyShim=window.ShadyCSS.ApplyShim,this._applyShim.invalidCallback=ApplyShimUtils.invalidate)}_ensureCustomStyleInterface(){this._customStyleInterface||window.ShadyCSS&&window.ShadyCSS.CustomStyleInterface&&(this._customStyleInterface=window.ShadyCSS.CustomStyleInterface,this._customStyleInterface.transformCallback=a=>{this.transformCustomStyleForDocument(a)},this._customStyleInterface.validateCallback=()=>{requestAnimationFrame(()=>{(this._customStyleInterface.enqueued||this._elementsHaveApplied)&&this.flushCustomStyles()})})}_ensure(){this._ensureApplyShim(),this._ensureCustomStyleInterface()}flushCustomStyles(){if(this._ensure(),!!this._customStyleInterface){let a=this._customStyleInterface.processStyles();this._customStyleInterface.enqueued&&(nativeCssVariables?this._revalidateCustomStyleApplyShim(a):(this._updateProperties(this._documentOwner,this._documentOwnerStyleInfo),this._applyCustomStyles(a)),this._customStyleInterface.enqueued=!1,this._elementsHaveApplied&&!nativeCssVariables&&this.styleDocument())}}styleElement(a,b){let{is:d}=StyleUtil.getIsExtends(a),e=StyleInfo.get(a);if(e||(e=this._prepareHost(a)),this._isRootOwner(a)||(this._elementsHaveApplied=!0),b&&(e.overrideStyleProperties=e.overrideStyleProperties||{},Object.assign(e.overrideStyleProperties,b)),!nativeCssVariables)this._updateProperties(a,e),e.ownStylePropertyNames&&e.ownStylePropertyNames.length&&this._applyStyleProperties(a,e);else{e.overrideStyleProperties&&updateNativeProperties(a,e.overrideStyleProperties);let f=templateMap[d];if(!f&&!this._isRootOwner(a))return;if(f&&f._style&&!ApplyShimUtils.templateIsValid(f)){if(ApplyShimUtils.templateIsValidating(f)||(this._ensure(),this._applyShim&&this._applyShim.transformRules(f._styleAst,d),f._style.textContent=StyleTransformer.elementStyles(a,e.styleRules),ApplyShimUtils.startValidatingTemplate(f)),nativeShadow){let g=a.shadowRoot;if(g){let h=g.querySelector('style');h.textContent=StyleTransformer.elementStyles(a,e.styleRules)}}e.styleRules=f._styleAst}}}_styleOwnerForNode(a){let b=a.getRootNode(),d=b.host;return d?StyleInfo.get(d)?d:this._styleOwnerForNode(d):this._documentOwner}_isRootOwner(a){return a===this._documentOwner}_applyStyleProperties(a,b){let d=StyleUtil.getIsExtends(a).is,e=styleCache.fetch(d,b.styleProperties,b.ownStylePropertyNames),f=e&&e.scopeSelector,g=e?e.styleElement:null,h=b.scopeSelector;b.scopeSelector=f||this._generateScopeSelector(d);let j=StyleProperties.applyElementStyle(a,b.styleProperties,b.scopeSelector,g);return nativeShadow||StyleProperties.applyElementScopeSelector(a,b.scopeSelector,h),e||styleCache.store(d,b.styleProperties,j,b.scopeSelector),j}_updateProperties(a,b){let d=this._styleOwnerForNode(a),e=StyleInfo.get(d),f=e.styleProperties,g=Object.create(f||null),h=StyleProperties.hostAndRootPropertiesForScope(a,b.styleRules),j=StyleProperties.propertyDataFromStyles(e.styleRules,a),k=j.properties;Object.assign(g,h.hostProps,k,h.rootProps),this._mixinOverrideStyles(g,b.overrideStyleProperties),StyleProperties.reify(g),b.styleProperties=g}_mixinOverrideStyles(a,b){for(let d in b){let e=b[d];(e||0===e)&&(a[d]=e)}}styleDocument(a){this.styleSubtree(this._documentOwner,a)}styleSubtree(a,b){let d=a.shadowRoot;(d||this._isRootOwner(a))&&this.styleElement(a,b);let e=d&&(d.children||d.childNodes);if(e)for(let g,f=0;f<e.length;f++)g=e[f],this.styleSubtree(g);else{let f=a.children||a.childNodes;if(f)for(let h,g=0;g<f.length;g++)h=f[g],this.styleSubtree(h)}}_revalidateCustomStyleApplyShim(a){for(let b=0;b<a.length;b++){let d=a[b],e=this._customStyleInterface.getStyleForCustomStyle(d);e&&this._revalidateApplyShim(e)}}_applyCustomStyles(a){for(let b=0;b<a.length;b++){let d=a[b],e=this._customStyleInterface.getStyleForCustomStyle(d);e&&StyleProperties.applyCustomStyle(e,this._documentOwnerStyleInfo.styleProperties)}}transformCustomStyleForDocument(a){let b=StyleUtil.rulesForStyle(a);StyleUtil.forEachRule(b,d=>{nativeShadow?StyleTransformer.normalizeRootSelector(d):StyleTransformer.documentRule(d),nativeCssVariables&&(this._ensure(),this._applyShim&&this._applyShim.transformRule(d))}),nativeCssVariables?a.textContent=StyleUtil.toCssText(b):this._documentOwnerStyleInfo.styleRules.rules.push(b)}_revalidateApplyShim(a){if(nativeCssVariables&&this._applyShim){let b=StyleUtil.rulesForStyle(a);this._ensure(),this._applyShim.transformRules(b),a.textContent=StyleUtil.toCssText(b)}}getComputedStyleValue(a,b){let d;if(!nativeCssVariables){let e=StyleInfo.get(a)||StyleInfo.get(this._styleOwnerForNode(a));d=e.styleProperties[b]}return d=d||window.getComputedStyle(a).getPropertyValue(b),d?d.trim():''}setElementClass(a,b){let d=a.getRootNode(),e=b?b.split(/\s/):[],f=d.host&&d.host.localName;if(!f){var g=a.getAttribute('class');if(g){let h=g.split(/\s/);for(let j=0;j<h.length;j++)if(h[j]===StyleTransformer.SCOPE_NAME){f=h[j+1];break}}}if(f&&e.push(StyleTransformer.SCOPE_NAME,f),!nativeCssVariables){let h=StyleInfo.get(a);h&&h.scopeSelector&&e.push(StyleProperties.XSCOPE_NAME,h.scopeSelector)}StyleUtil.setElementClassRaw(a,e.join(' '))}_styleInfoForNode(a){return StyleInfo.get(a)}}ScopingShim.prototype.flush=ScopingShim.prototype.flush,ScopingShim.prototype.prepareTemplate=ScopingShim.prototype.prepareTemplate,ScopingShim.prototype.styleElement=ScopingShim.prototype.styleElement,ScopingShim.prototype.styleDocument=ScopingShim.prototype.styleDocument,ScopingShim.prototype.styleSubtree=ScopingShim.prototype.styleSubtree,ScopingShim.prototype.getComputedStyleValue=ScopingShim.prototype.getComputedStyleValue,ScopingShim.prototype.setElementClass=ScopingShim.prototype.setElementClass,ScopingShim.prototype._styleInfoForNode=ScopingShim.prototype._styleInfoForNode,ScopingShim.prototype.transformCustomStyleForDocument=ScopingShim.prototype.transformCustomStyleForDocument,ScopingShim.prototype.getStyleAst=ScopingShim.prototype.getStyleAst,ScopingShim.prototype.styleAstToString=ScopingShim.prototype.styleAstToString,ScopingShim.prototype.flushCustomStyles=ScopingShim.prototype.flushCustomStyles,Object.defineProperties(ScopingShim.prototype,{nativeShadow:{get(){return nativeShadow}},nativeCss:{get(){return nativeCssVariables}}});