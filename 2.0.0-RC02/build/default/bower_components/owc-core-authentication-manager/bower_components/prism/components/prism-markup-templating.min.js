Prism.languages["markup-templating"]={},Object.defineProperties(Prism.languages["markup-templating"],{buildPlaceholders:{value:function(b,d,h,j){b.language===d&&(b.tokenStack=[],b.code=b.code.replace(h,function(m){if("function"==typeof j&&!j(m))return m;for(var q=b.tokenStack.length;-1!==b.code.indexOf("___"+d.toUpperCase()+q+"___");)++q;return b.tokenStack[q]=m,"___"+d.toUpperCase()+q+"___"}),b.grammar=Prism.languages.markup)}},tokenizePlaceholders:{value:function(b,d){if(b.language===d&&b.tokenStack){b.grammar=Prism.languages[d];var h=0,j=Object.keys(b.tokenStack),m=function(q){if(!(h>=j.length))for(var w,v=0;v<q.length;v++)if(w=q[v],"string"==typeof w||w.content&&"string"==typeof w.content){var x=j[h],y=b.tokenStack[x],z="string"==typeof w?w:w.content,A=z.indexOf("___"+d.toUpperCase()+x+"___");if(-1<A){++h;var B,C=z.substring(0,A),D=new Prism.Token(d,Prism.tokenize(y,b.grammar,d),"language-"+d,y),E=z.substring(A+("___"+d.toUpperCase()+x+"___").length);if(C||E?(B=[C,D,E].filter(function(F){return!!F}),m(B)):B=D,"string"==typeof w?Array.prototype.splice.apply(q,[v,1].concat(B)):w.content=B,h>=j.length)break}}else w.content&&"string"!=typeof w.content&&m(w.content)};m(b.tokens)}}}});