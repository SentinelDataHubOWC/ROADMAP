"use strict";import{nativeShadow}from"./style-settings.js";import StyleTransformer from"./style-transformer.js";import{getIsExtends}from"./style-util.js";export let flush=function(){};function getClasses(element){let classes=[];if(element.classList){classes=Array.from(element.classList)}else if(element instanceof window.SVGElement&&element.hasAttribute("class")){classes=element.getAttribute("class").split(/\s+/)}return classes}function getCurrentScope(element){let classes=getClasses(element),idx=classes.indexOf(StyleTransformer.SCOPE_NAME);if(-1<idx){return classes[idx+1]}return""}function handler(mxns){for(let x=0,mxn;x<mxns.length;x++){mxn=mxns[x];if(mxn.target===document.documentElement||mxn.target===document.head){continue}for(let i=0,n;i<mxn.addedNodes.length;i++){n=mxn.addedNodes[i];if(n.nodeType!==Node.ELEMENT_NODE){continue}n=n;let root=n.getRootNode(),currentScope=getCurrentScope(n);if(currentScope&&root===n.ownerDocument){StyleTransformer.dom(n,currentScope,!0)}else if(root.nodeType===Node.DOCUMENT_FRAGMENT_NODE){let newScope,host=root.host;if(!host){continue}newScope=getIsExtends(host).is;if(currentScope===newScope){let unscoped=window.ShadyDOM.nativeMethods.querySelectorAll.call(n,`:not(.${StyleTransformer.SCOPE_NAME})`);for(let j=0;j<unscoped.length;j++){StyleTransformer.element(unscoped[j],currentScope)}continue}if(currentScope){StyleTransformer.dom(n,currentScope,!0)}StyleTransformer.dom(n,newScope)}}}}if(!nativeShadow){let observer=new MutationObserver(handler),start=node=>{observer.observe(node,{childList:!0,subtree:!0})},nativeCustomElements=window.customElements&&!window.customElements.polyfillWrapFlushCallback;if(nativeCustomElements){start(document)}else{let delayedStart=()=>{start(document.body)};if(window.HTMLImports){window.HTMLImports.whenReady(delayedStart)}else{requestAnimationFrame(function(){if("loading"===document.readyState){let listener=function(){delayedStart();document.removeEventListener("readystatechange",listener)};document.addEventListener("readystatechange",listener)}else{delayedStart()}})}}flush=function(){handler(observer.takeRecords())}}